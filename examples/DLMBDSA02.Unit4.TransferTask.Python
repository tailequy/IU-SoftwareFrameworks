{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNqSlweOhRYlJmUDdVuHd9g"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Machine Learning in Python"],"metadata":{"id":"081yTtgfT2fh"}},{"cell_type":"code","source":["#load scikit-learn datasets\n","from sklearn import datasets\n","#Load the breast cancer dataset\n","cancer = datasets.load_breast_cancer()\n","# show the size of the dataset\n","cancer.data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C2PAaQl5T9qP","executionInfo":{"status":"ok","timestamp":1714334771723,"user_tz":-120,"elapsed":12,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}},"outputId":"38e99380-765e-419e-d7d9-5a2f6bd898be"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(569, 30)"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["# show the target attribute\n","print(cancer.target)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sQMUkscSUGeb","executionInfo":{"status":"ok","timestamp":1714334786364,"user_tz":-120,"elapsed":262,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}},"outputId":"14d42fff-312a-4386-ddd5-a74cc2a1dcd6"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 1 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0\n"," 1 0 1 0 0 1 1 1 0 0 1 0 0 0 1 1 1 0 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 1 0 1 1\n"," 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 1 1 0 1\n"," 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0\n"," 1 0 1 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1\n"," 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 1 1\n"," 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0\n"," 0 1 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1\n"," 1 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 1\n"," 0 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1\n"," 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 1 1 0 1 0 1 0 0\n"," 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 1 1 1 1 1 0 0 0 0 0 0 1]\n"]}]},{"cell_type":"code","source":["# Import train_test_split function\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(cancer.data,cancer.target, test_size=0.3, random_state=1)"],"metadata":{"id":"aXI-xIz_UO4i","executionInfo":{"status":"ok","timestamp":1714334855105,"user_tz":-120,"elapsed":350,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["X_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dMPySjAZUbp5","executionInfo":{"status":"ok","timestamp":1714334858547,"user_tz":-120,"elapsed":4,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}},"outputId":"7773606b-6dfd-47c8-8359-635587d31cc2"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(398, 30)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vskGVaHpUdbY","executionInfo":{"status":"ok","timestamp":1714334857220,"user_tz":-120,"elapsed":281,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}},"outputId":"aa1c0e7e-e33c-4d4c-ea08-00c8047cdc6a"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(171, 30)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#Import svm module\n","from sklearn import svm\n","#build the SVM Classifier\n","clf = svm.SVC(kernel='linear')"],"metadata":{"id":"onjdcbOlUg14","executionInfo":{"status":"ok","timestamp":1714334901260,"user_tz":-120,"elapsed":228,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":[" #Train the model\n","clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"h5vJOmfHUqzf","executionInfo":{"status":"ok","timestamp":1714334921268,"user_tz":-120,"elapsed":1642,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}},"outputId":"ea493ee1-6942-4499-f627-48d274d0b994"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(kernel='linear')"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(kernel=&#x27;linear&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#Predict for the test dataset\n","y_pred = clf.predict(X_test)"],"metadata":{"id":"qgDIqT8yUvDS","executionInfo":{"status":"ok","timestamp":1714334935455,"user_tz":-120,"elapsed":319,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","# Model Accuracy\n","print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RPsWHtdhUy9W","executionInfo":{"status":"ok","timestamp":1714334960438,"user_tz":-120,"elapsed":312,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}},"outputId":"90daba2c-561a-47bc-b0e0-8ac0f3aded22"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9532163742690059\n"]}]},{"cell_type":"markdown","source":["# TensorFlow Package in Python"],"metadata":{"id":"y8ViLVdNU50c"}},{"cell_type":"markdown","source":["We will use the famous fashion MNIST dataset to build a prediction neural network model through implementing tf.Keras, which is a high-level API to build and train models in TensorFlow. The MNIST dataset includes grayscale images of clothing items. Each image is 28 x 28 pixels, and the target label is one of the following 10 possible classes:\n","[0 = T-shirt/top][1 = Trouser][2 = Pullover][3 = Dress][4 = Coat]\n","[5 = Sandal][6 = Shirt][7 = Sneaker][8 = Bag][9 = Ankle Boot]\n","The dataset is divided into 54,000 images as a training set, 6,000 images as a validation set, and 10,000 images as a testing set."],"metadata":{"id":"xLqrg8ZIVIeg"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow import keras\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"4ZVwnDX_U5Wg","executionInfo":{"status":"ok","timestamp":1714335110978,"user_tz":-120,"elapsed":4926,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["from keras.datasets import fashion_mnist"],"metadata":{"id":"e0DCYbEaViWS","executionInfo":{"status":"ok","timestamp":1714335290327,"user_tz":-120,"elapsed":232,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["#import fashion_MNIST\n","#fashion_mnist = fashion_MNIST.Dataset(data_download_path='data/fashion',validation_flag=True, verbose=True)\n","# Loading the fashion MNIST data\n","(X_train, Y_train), (X_test, Y_test) = fashion_mnist.load_data()\n","model = keras.Sequential([\n","keras.layers.Flatten(input_shape=(28, 28)),\n","keras.layers.Dense(128, activation=tf.nn.relu),\n","keras.layers.Dense(128, activation=tf.nn.relu),\n","keras.layers.Dense(10, activation=tf.nn.softmax)\n","])"],"metadata":{"id":"tr2cjwbiVRyH","executionInfo":{"status":"ok","timestamp":1714335435950,"user_tz":-120,"elapsed":1209,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"vArruU74WteP","executionInfo":{"status":"ok","timestamp":1714335464146,"user_tz":-120,"elapsed":240,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["model.fit(X_train, Y_train, epochs=5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zbWrYEJqW0TZ","executionInfo":{"status":"ok","timestamp":1714335645235,"user_tz":-120,"elapsed":59100,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}},"outputId":"e6e57f0d-27d7-4eda-c5c6-40c2f5be5f29"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","1875/1875 [==============================] - 14s 6ms/step - loss: 2.3902 - accuracy: 0.7260\n","Epoch 2/5\n","1875/1875 [==============================] - 13s 7ms/step - loss: 0.6638 - accuracy: 0.7798\n","Epoch 3/5\n","1875/1875 [==============================] - 11s 6ms/step - loss: 0.6264 - accuracy: 0.7917\n","Epoch 4/5\n","1875/1875 [==============================] - 10s 5ms/step - loss: 0.5810 - accuracy: 0.8053\n","Epoch 5/5\n","1875/1875 [==============================] - 11s 6ms/step - loss: 0.5319 - accuracy: 0.8198\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x798f60411900>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["test_loss, test_acc = model.evaluate(X_test, Y_test)\n","print('Test accuracy:', test_acc)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NqCAh85KXVvI","executionInfo":{"status":"ok","timestamp":1714335671991,"user_tz":-120,"elapsed":1508,"user":{"displayName":"Quý Tài Lê","userId":"03918798918898681244"}},"outputId":"d3da183b-c93d-45b6-c164-32fcae662a04"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 1s 2ms/step - loss: 0.5589 - accuracy: 0.8148\n","Test accuracy: 0.8148000240325928\n"]}]}]}